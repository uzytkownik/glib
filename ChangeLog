2008-10-06  Matthias Clasen  <mclasen@redhat.com>

	* glib/gtypes.h: Properly include gmacros.h

2008-10-06  Behdad Esfahbod  <behdad@gnome.org>

	Bug 555309 – giochannel breaks on error
	Patch from Christian Persch

	* glib/giounix.c (g_io_unix_read), (g_io_unix_write),
	(g_io_unix_seek), (g_io_unix_close), (g_io_unix_set_flags):
	Don't shadow err.  Oops!

2008-10-06  Christophe Fergeau  <teuf@gnome.org>

	Bug 555224 – Improve g_format_size_for_display doc
	
	* glib/gfileutils.c: change g_format_size_for_display API doc to
	explicitly say that the returned string has to be freed. Change
	spelling of "newly allocated" to "newly-allocated" in g_file_read_link
	API doc to be more consistent with what is done in that file.

2008-10-01  David Zeuthen  <davidz@redhat.com>

	* README.in: Add "Notes about glib 2.20" section detailing the
	ramifications of the patch from bug #528670.

2008-09-30  Behdad Esfahbod  <behdad@gnome.org>

	Bug 554092 – glib doesn't return G_FILE_ERROR_NOENT et al on OS X

	* glib/giounix.c (g_io_unix_read), (g_io_unix_write),
	(g_io_unix_seek), (g_io_unix_close), (g_io_unix_set_flags),
	(g_io_unix_get_flags), (g_io_channel_new_file):
	Like mclasen says: "well, thats the way errno works...,
	save it or loose it".  Save errno.

2008-09-30  Tor Lillqvist  <tml@novell.com>

	* Makefile.decl
	* glib/tests/Makefile.am: Bypass gtester related stuff on Windows.

2008-09-30  Tor Lillqvist  <tml@novell.com>

	* glib/gprintf.c
	* glib/gnulib/vasnprintf.c: Don't define _GNU_SOURCE on Windows,
	as _GNU_SOURCE has unintended side effects when compiling against
	newest mingw headers.

2008-09-26  Dan Winship  <danw@gnome.org>

	Bug 553447 – g_assert_no_error()

	* glib/gtestutils.h (g_assert_no_error, g_assert_error): Macros to
	assert that a GError is not set, or else is set to a particular
	error.

	* glib/gtestutils.c (g_assertion_message_error): utility for
	those macros

	* glib/tests/keyfile.c:
	* tests/asyncqueue-test.c:
	* tests/bookmarkfile-test.c:
	* tests/convert-test.c:
	* tests/file-test.c: Use g_assert_error/g_assert_no_error

2008-09-26  Dan Winship  <danw@gnome.org>

	* glib/gthreadpool.c (wakeup_thread_marker): make this a "const
	gpointer" rather than a gconstpointer to avoid warnings later

	* glib/pcre/pcre_ucp_searchfuncs.c:
	* glib/pcre/pcre_valid_utf8.c: #include "config.h"

	* glib/tests/printf.c (test_d): fool gcc into not warning about
	some printf format strings that we know are dubious

2008-09-26  Matthias Clasen  <mclasen@redhat.com>

	Bug 553857 – gbacktrace.h requires signal.h

	* glib/gbacktrace.h: Include signal.h for raise(). 
	Pointed out by Sebastien Bacher

2008-09-26  Matthias Clasen  <mclasen@redhat.com>

	Bug 553724 – python interpretter path not patched in correctly

	* glib/Makefile.am: Fix the sed magic to replace python.

2008-09-26  Matthias Clasen  <mclasen@redhat.com>

	* glib/gmain.c: Add some more docs.

	* glib/giochannel.c: Move more docs inline, and improve them
	on the way.

2008-09-25  Tor Lillqvist  <tml@novell.com>

	Bug 553820 - gpoll.c: undeclared identifier

	* glib/gmain.c
	* glib/gpoll.c: Make the g_poll() function non-static also on
	Windows. Prefix an underscore to the g_main_poll_debug variable
	and make it non-static in gmain.c so that it can be used in
	gpoll.c. Add back missing variable declaration.

2008-09-25  Tor Lillqvist  <tml@novell.com>

	* glib/gspawn-win32.c (do_spawn_with_pipes) (do_spawn_directly):
	Just ignore the child_setup function, never call it. The is no
	situation in which it could be useful on Windows. Do print a
	warning, like before.

	* glib/gspawn.c (g_spawn_async_with_pipes): Corresponding change
	in documentation.

2008-09-24  Sven Herzberg  <sven@imendio.com>

	Be a little more explcit in the docs. Includes Owen's requested
	changes.

	* glib/gmain.c: improved documentation for g_source_attach() and
	g_source_destroy()

2008-09-23  Michael Natterer  <mitch@imendio.com>

	* glib/glib.h: #include <glib/gpoll.h>

	* glib/gpoll.h: #error out if gpoll.h is included directly.

	* glib/gpoll.c: remove trailing whitespace.

2008-09-23  Dan Winship  <danw@gnome.org>

	* glib/gpoll.[ch] (g_poll): Move this out of gmain.c and make it part
	of the public API. (Part of Bug 505361 - gunixinputstream.c assumes
	poll() available.)

2008-09-23  Tor Lillqvist  <tml@novell.com>

	* glib/gmain.c (poll_rest) [Win32]: Fix embarrassing bug: I was
	passing an incorrect third parameter to memmove(), had forgotten
	to multiply by the size of the table entry. Just use a for loop
	instead, clearer. Odd I didn't notice when testing this code.

2008-09-19  Hans Petter Jansson  <hpj@novell.com>

	Rewrite most of GHashTable to use open addressing with quadratic
	probing instead of chaining. This has the potential to reduce memory
	fragmentation significantly, while being slightly faster due to
	better locality and no need to call alloc/free functions for nodes.
	Benchmarks suggest it also uses less memory overall.

	* glib/ghash.c (prime_mod): Table of suitable primes for
	initial-probe distribution.
	(g_hash_table_set_shift): New function.
	(g_hash_table_find_closest_shift): New function.
	(g_hash_table_set_shift_from_size): New function.
	(g_hash_table_lookup_node_for_insertion): New function.
	(g_hash_table_lookup_node): Rewritten to return node index instead of
	pointer, use quadratic probe on flat table, and not return insertion
	data. The latter saves some computation for read-only lookups.
	(g_hash_table_remove_node): Rewrite to take a pointer directly to the
	node structure to remove, and clear that. Remove unlinking code.
	(g_hash_table_remove_all_nodes): Rewrite to not clear nodes
	individually, but en masse using memset () after potentially calling
	notify functions.
	(iter_remove_or_steal): Use new data structure and algorithm. Vastly
	simplified - now just a call to g_hash_table_remove_node ().
	(g_hash_table_resize): New resize code, re-indexing with new prime
	and cleaning up tombstones.
	(g_hash_table_maybe_resize): Table may hold 8 buckets minimum, no less
	than 1/4 load excluding tombstones, and no more than 15/16 load
	including tombstones. These numbers are the results of a lot of
	benchmarking with multiple complex applications, and should not be
	changed lightly.
	(g_hash_table_iter_next)
	(g_hash_table_lookup)
	(g_hash_table_lookup_extended)
	(g_hash_table_insert_internal)
	(g_hash_table_remove_internal)
	(g_hash_table_foreach_remove_or_steal)
	(g_hash_table_foreach)
	(g_hash_table_find)
	(g_hash_table_get_keys)
	(g_hash_table_get_values): Use new data structure and algorithm,
	fairly trivial changes.

2008-09-19  Tor Lillqvist  <tml@novell.com>

	* glib-zip.in: Look for man pages in share/man.

	* glib/gutils.c (_glib_get_dll_directory)
	* glib/gspawn-win32.c (do_spawn_with_pipes): Be a bit less
	restrictive, look for the helper programs in the same folder where
	the GLib DLL is, not necessarily in a "bin" subfolder of the top
	GLib installation folder.

2008-09-18  Matthias Clasen <mclasen@redhat.com>

	* configure.in: Bump version to 2.19.0

	* ChangeLog.pre-2-18: rotate ChangeLog
	
	* === branch for 2.18 ===
