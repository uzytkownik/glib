<!-- ##### STRUCT GBoxed ##### -->
<para>

</para>


<!-- ##### USER_FUNCTION GBoxedInitFunc ##### -->
<para>

</para>

@Returns: 

<!-- ##### FUNCTION g_closure_add_fnotify ##### -->
<para>

</para>

@closure: 
@notify_data: 
@notify_func: 

<!-- ##### FUNCTION g_closure_add_inotify ##### -->
<para>

</para>

@closure: 
@notify_data: 
@notify_func: 

<!-- ##### FUNCTION g_closure_remove_fnotify ##### -->
<para>

</para>

@closure: 
@notify_data: 
@notify_func: 

<!-- ##### FUNCTION g_closure_remove_inotify ##### -->
<para>

</para>

@closure: 
@notify_data: 
@notify_func: 

<!-- ##### FUNCTION g_param_spec_string_c ##### -->
<para>

</para>

@name: 
@nick: 
@blurb: 
@default_value: 
@flags: 
@Returns: 

<!-- ##### FUNCTION g_signal_add_emission_hook_full ##### -->
<para>

</para>

@signal_id: 
@closure: 
@Returns: 

<!-- ##### MACRO g_signal_newc ##### -->
<para>

</para>

@Returns: 
@signal_name: 
@itype: 
@signal_flags: 
@class_offset: 
@accumulator: 
@accu_data: 
@c_marshaller: 
@return_type: 
@n_params: 
@Varargs: 

<!-- ##### FUNCTION g_type_value_is_a ##### -->
<para>
Determines if @value is a #GValue whose type conforms to @type.
</para>

@value: 	  A valid #GValue structure.
@type:    A #GType value.
@Returns: #TRUE if @value is a #GValue of @type or #FALSE if not.

<!-- ##### FUNCTION g_value_convert ##### -->
<para>

</para>

@src_value: 
@dest_value: 
@Returns: 

<!-- ##### FUNCTION g_value_register_exchange_func ##### -->
<para>

</para>

@value_type1: 
@value_type2: 
@func: 

<!-- ##### FUNCTION g_value_types_exchangable ##### -->
<para>

</para>

@value_type1: 
@value_type2: 
@Returns: 

<!-- ##### FUNCTION g_values_exchange ##### -->
<para>

</para>

@value1: 
@value2: 
@Returns: 

