<!-- ##### SECTION Title ##### -->
GObject

<!-- ##### SECTION Short_Description ##### -->
The base object type.

<!-- ##### SECTION Long_Description ##### -->
<para>

</para>

<!-- ##### SECTION See_Also ##### -->
<para>

</para>

<!-- ##### STRUCT GObject ##### -->
<para>
All the fields in the GObject structure are private to the #GObject implementation
and should never be accessed directly.
</para>

@g_type_instance: 

<!-- ##### STRUCT GObjectClass ##### -->
<para>

</para>


<!-- ##### STRUCT GObjectConstructParam ##### -->
<para>

</para>

@pspec: 
@value: 

<!-- ##### USER_FUNCTION GObjectGetPropertyFunc ##### -->
<para>

</para>

@object: 
@property_id: 
@value: 
@pspec: 
<!-- # Unused Parameters # -->
@trailer: 


<!-- ##### USER_FUNCTION GObjectSetPropertyFunc ##### -->
<para>

</para>

@object: 
@property_id: 
@value: 
@pspec: 
<!-- # Unused Parameters # -->
@trailer: 


<!-- ##### USER_FUNCTION GObjectFinalizeFunc ##### -->
<para>

</para>

@object: 


<!-- ##### MACRO G_TYPE_IS_OBJECT ##### -->
<para>
Return a boolean value of %FALSE or %TRUE indicating whether
the passed in type id is a %G_TYPE_OBJECT or derived from it.
</para>

@type: Type id to check for is a %G_TYPE_OBJECT relationship.
@Returns: %FALSE or %TRUE, indicating whether @type is a %G_TYPE_OBJECT.


<!-- ##### MACRO G_OBJECT ##### -->
<para>
Cast a #GObject or derived pointer into a (GObject*) pointer.
Depending on the current debugging level, this function may invoke
certain runtime checks to identify invalid casts.
</para>

@object: Object which is subject to casting.


<!-- ##### MACRO G_IS_OBJECT ##### -->
<para>
Check whether a valid #GTypeInstance pointer is of type %G_TYPE_OBJECT.
</para>

@object: Instance to check for being a %G_TYPE_OBJECT.


<!-- ##### MACRO G_OBJECT_CLASS ##### -->
<para>

</para>

@class: 


<!-- ##### MACRO G_IS_OBJECT_CLASS ##### -->
<para>

</para>

@class: 


<!-- ##### MACRO G_OBJECT_GET_CLASS ##### -->
<para>

</para>

@object: 


<!-- ##### MACRO G_OBJECT_TYPE ##### -->
<para>
Return the type id of an object.
</para>

@object: Object to return the type id for.
@Returns: Type id of @object.


<!-- ##### MACRO G_OBJECT_TYPE_NAME ##### -->
<para>

</para>

@object: 


<!-- ##### MACRO G_OBJECT_CLASS_TYPE ##### -->
<para>

</para>

@class: 


<!-- ##### MACRO G_OBJECT_CLASS_NAME ##### -->
<para>

</para>

@class: 


<!-- ##### MACRO G_VALUE_HOLDS_OBJECT ##### -->
<para>

</para>

@value: 


<!-- ##### FUNCTION g_object_class_install_property ##### -->
<para>

</para>

@oclass: 
@property_id: 
@pspec: 


<!-- ##### FUNCTION g_object_class_find_property ##### -->
<para>

</para>

@oclass: 
@property_name: 
@Returns: 


<!-- ##### FUNCTION g_object_class_list_properties ##### -->
<para>

</para>

@oclass: 
@n_properties: 
@Returns: 


<!-- ##### FUNCTION g_object_new ##### -->
<para>

</para>

@object_type: 
@first_property_name: 
@Varargs: 
@Returns: 
<!-- # Unused Parameters # -->
@first_param_name: 


<!-- ##### FUNCTION g_object_newv ##### -->
<para>

</para>

@object_type: 
@n_parameters: 
@parameters: 
@Returns: 


<!-- ##### FUNCTION g_object_ref ##### -->
<para>

</para>

@object: 
@Returns: 


<!-- ##### FUNCTION g_object_unref ##### -->
<para>

</para>

@object: 


<!-- ##### FUNCTION g_object_weak_ref ##### -->
<para>

</para>

@object: 
@notify: 
@data: 


<!-- ##### FUNCTION g_object_weak_unref ##### -->
<para>

</para>

@object: 
@notify: 
@data: 


<!-- ##### FUNCTION g_object_add_weak_pointer ##### -->
<para>
Adds a weak reference from weak_pointer to @object to indicate that
the pointer located at @weak_pointer_location is only valid during the 
lifetime of @object. When the @object is finalized, @weak_pointer will 
be set to %NULL.
</para>

@object: The object that should be weak referenced.
@weak_pointer_location: The memory address of a pointer.


<!-- ##### FUNCTION g_object_remove_weak_pointer ##### -->
<para>
Removes a weak reference from @object that was previously added
using g_object_add_weak_pointer(). The @weak_pointer_location has
to match the one used with g_object_add_weak_pointer().
</para>

@object: The object that is weak referenced.
@weak_pointer_location: The memory address of a pointer.


<!-- ##### FUNCTION g_object_connect ##### -->
<para>

</para>

@object: 
@signal_spec: 
@Varargs: 
@Returns: 


<!-- ##### FUNCTION g_object_disconnect ##### -->
<para>

</para>

@object: 
@signal_spec: 
@Varargs: 
<!-- # Unused Parameters # -->
@Returns: 


<!-- ##### FUNCTION g_object_set ##### -->
<para>

</para>

@object: 
@first_property_name: 
@Varargs: 
<!-- # Unused Parameters # -->
@Returns: 


<!-- ##### FUNCTION g_object_get ##### -->
<para>

</para>

@object: 
@first_property_name: 
@Varargs: 


<!-- ##### FUNCTION g_object_notify ##### -->
<para>

</para>

@object: 
@property_name: 


<!-- ##### FUNCTION g_object_freeze_notify ##### -->
<para>

</para>

@object: 


<!-- ##### FUNCTION g_object_thaw_notify ##### -->
<para>

</para>

@object: 


<!-- ##### FUNCTION g_object_get_data ##### -->
<para>

</para>

@object: 
@key: 
@Returns: 


<!-- ##### FUNCTION g_object_set_data ##### -->
<para>

</para>

@object: 
@key: 
@data: 


<!-- ##### FUNCTION g_object_set_data_full ##### -->
<para>

</para>

@object: 
@key: 
@data: 
@destroy: 


<!-- ##### FUNCTION g_object_steal_data ##### -->
<para>

</para>

@object: 
@key: 
@Returns: 


<!-- ##### FUNCTION g_object_get_qdata ##### -->
<para>

</para>

@object: 
@quark: 
@Returns: 


<!-- ##### FUNCTION g_object_set_qdata ##### -->
<para>

</para>

@object: 
@quark: 
@data: 


<!-- ##### FUNCTION g_object_set_qdata_full ##### -->
<para>

</para>

@object: 
@quark: 
@data: 
@destroy: 


<!-- ##### FUNCTION g_object_steal_qdata ##### -->
<para>

</para>

@object: 
@quark: 
@Returns: 


<!-- ##### FUNCTION g_object_set_property ##### -->
<para>

</para>

@object: 
@property_name: 
@value: 


<!-- ##### FUNCTION g_object_get_property ##### -->
<para>

</para>

@object: 
@property_name: 
@value: 


<!-- ##### FUNCTION g_object_new_valist ##### -->
<para>

</para>

@object_type: 
@first_property_name: 
@var_args: 
@Returns: 


<!-- ##### FUNCTION g_object_set_valist ##### -->
<para>

</para>

@object: 
@first_property_name: 
@var_args: 


<!-- ##### FUNCTION g_object_get_valist ##### -->
<para>

</para>

@object: 
@first_property_name: 
@var_args: 


<!-- ##### FUNCTION g_object_watch_closure ##### -->
<para>

</para>

@object: 
@closure: 


<!-- ##### FUNCTION g_object_run_dispose ##### -->
<para>

</para>

@object: 


<!-- ##### FUNCTION g_value_set_object ##### -->
<para>

</para>

@value: 
@v_object: 


<!-- ##### FUNCTION g_value_get_object ##### -->
<para>

</para>

@value: 
@Returns: 


<!-- ##### FUNCTION g_value_dup_object ##### -->
<para>

</para>

@value: 
@Returns: 


<!-- ##### MACRO G_OBJECT_WARN_INVALID_PROPERTY_ID ##### -->
<para>

</para>

@object: 
@property_id: 
@pspec: 


