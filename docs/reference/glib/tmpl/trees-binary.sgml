<!-- ##### SECTION Title ##### -->
Balanced Binary Trees

<!-- ##### SECTION Short_Description ##### -->


<!-- ##### SECTION Long_Description ##### -->
<para>

</para>

<!-- ##### SECTION See_Also ##### -->
<para>

</para>

<!-- ##### STRUCT GTree ##### -->
<para>

</para>


<!-- ##### FUNCTION g_tree_new ##### -->
<para>

</para>

@key_compare_func: 
@Returns: 


<!-- ##### FUNCTION g_tree_insert ##### -->
<para>

</para>

@tree: 
@key: 
@value: 


<!-- ##### FUNCTION g_tree_nnodes ##### -->
<para>

</para>

@tree: 
@Returns: 


<!-- ##### FUNCTION g_tree_height ##### -->
<para>

</para>

@tree: 
@Returns: 


<!-- ##### FUNCTION g_tree_lookup ##### -->
<para>

</para>

@tree: 
@key: 
@Returns: 


<!-- ##### FUNCTION g_tree_search ##### -->
<para>

</para>

@tree: 
@search_func: 
@data: 
@Returns: 


<!-- ##### FUNCTION g_tree_traverse ##### -->
<para>

</para>

@tree: 
@traverse_func: 
@traverse_type: 
@data: 


<!-- ##### USER_FUNCTION GTraverseFunc ##### -->
<para>

</para>

@key: 
@value: 
@data: 
@Returns: 


<!-- ##### ENUM GTraverseType ##### -->
<para>

</para>

@G_IN_ORDER: 
@G_PRE_ORDER: 
@G_POST_ORDER: 
@G_LEVEL_ORDER: 

<!-- ##### FUNCTION g_tree_remove ##### -->
<para>

</para>

@tree: 
@key: 


<!-- ##### FUNCTION g_tree_destroy ##### -->
<para>

</para>

@tree: 


